buildscript {
    repositories {
        jcenter()
        
        maven { 
            name = "Forge"
            url = "http://files.minecraftforge.net/maven" 
        }
        maven {
            name = "CurseForge"
            url = "https://minecraft.curseforge.com/api/maven/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
plugins {
    id 'org.ajoberstar.grgit' version '3.1.1'
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "${project.mc_version}-${project.mod_version}"
group = "${project.maven_group}"
archivesBaseName = "${project.mod_id}"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${project.mc_version}-${project.forge_version}"
    runDir = "run"
    mappings = "${project.mcp_mappings}"
    replace "@VERSION@", "${project.mod_version}"
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        name = "Mobius Repo"
        url = "http://tehnut.info/maven"
    }
    maven {
        name = "JEI"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
    maven {
        url "https://maven.mcmoddev.com/"
    }
    maven {
        url = 'https://maven.blamejared.com'
    }
    maven {
        url "http://maven.tterrag.com/"
    }
    maven {
        url "http://maven.thiakil.com/"
    }
}

dependencies {
    deobfCompile "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
    deobfProvided "mezz.jei:jei_1.12.2:4.15.0.268:api"
    runtime "mezz.jei:jei_1.12.2:4.15.0.268"
    deobfCompile "com.github.glitchfiend.biomesoplenty:BiomesOPlenty:1.12.2-7.0.1.2399:universal"
    deobfCompile "com.azanor.baubles:Baubles:1.12-1.5.2"
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  options.compilerArgs = [
    '-Xlint:deprecation', // deprecation, rawtypes, cast, unchecked, all
    '-Xlint:unchecked',
  ]
}

task setupGithubActions() {
    def getVersion = {
        //TAG-offset-hash
        def raw = grgit.describe(longDescr: true, tags:true, match: ["[1-9].[0-9].[0-9]", "[1-9][0-9].[1-9][0-9].[1-9][0-9]", "[0-9].[1-9][0-9].[1-9][0-9]", "[0-9].[0-9].[1-9][0-9]", "[0-9].[1-9][0-9].[0-9]", "[1-9][0-9].[0-9].[0-9]"])
        def desc = (raw == null ? '0.0-0-unknown' : grgit.describe(longDescr: true, tags:true, match: ["[1-9].[0-9].[0-9]", "[1-9][0-9].[1-9][0-9].[1-9][0-9]", "[0-9].[1-9][0-9].[1-9][0-9]", "[0-9].[0-9].[1-9][0-9]", "[0-9].[1-9][0-9].[0-9]", "[1-9][0-9].[0-9].[0-9]"])).split('-') as List
        def hash = desc.remove(desc.size() - 1)
        def offset = desc.remove(desc.size() - 1)
        def tag = desc.join('-')
        return "${tag}.${offset}".toString() //Bake the response instead of making it dynamic
    }
    project.mod_version = getVersion();
    project.version = "${project.mc_version}-${project.mod_version}";
    def getLastTag = {
        def raw = grgit.describe(longDescr: true, tags:true)
        def desc = (raw == null ? 'HEAD' : grgit.describe(longDescr: true, tags:true)).split('-') as List
        desc.remove(desc.size() - 1)
        desc.remove(desc.size() - 1)
        def tag = desc.join('-')
        return tag;
    }
    def rawLog = grgit.log(includes: ['HEAD'], excludes: [getLastTag()]);
    def log = "";
    for(org.ajoberstar.grgit.Commit commit : rawLog) {
        log = log + "[`" + commit.abbreviatedId + "`](https://github.com/itsmeow/betteranimalsplus/commit/" + commit.id + ") " + commit.shortMessage + " - " + commit.author.name + "\\n";
    }
    doLast {
        exec {
            commandLine "echo", "##[set-output name=version;]${project.version}";
            commandLine "echo", "##[set-output name=commitlog;]" + "{\"content\":\"A new alpha is available!\",\"embed\":{\"author\":{\"name\":\"itsmeow\",\"url\":\"https://itsmeow.dev/\",\"icon_url\":\"https://itsmeow.dev/icon.png\"},\"title\":\"betteranimalsplus-alpha-${project.version}\",\"url\":\"https://github.com/itsmeow/betteranimalsplus/releases/tag/alpha-${project.version}\",\"color\":14700288,\"description\":\"" + log + "\"}}";
        }
    }
}

processResources {
    inputs.property "version", "${project.mod_version}"
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
  
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
